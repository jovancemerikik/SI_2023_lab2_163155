import org.junit.Test;
import static org.junit.Assert.*;

public class SILab2Test {

    @Test
    public void testFunction_validCredentials() {
        User user = new User("Jovan", "password123", "jovan@example.com");
        List<User> allUsers = new ArrayList<>(); // Add any necessary existing users to the list
        boolean result = SILab2.function(user, allUsers);
        assertTrue(result);
    }

    @Test
    public void testFunction_missingInformation() {
        User user = new User(null, null, null);
        List<User> allUsers = new ArrayList<>(); // Add any necessary existing users to the list
        RuntimeException exception = assertThrows(RuntimeException.class, () -> SILab2.function(user, allUsers));
        assertEquals("Mandatory information missing!", exception.getMessage());
    }

    @Test
    public void testFunction_invalidPassword() {
        User user = new User("Ana", "pass", "ana@example.com");
        List<User> allUsers = new ArrayList<>(); // Add any necessary existing users to the list
        boolean result = SILab2.function(user, allUsers);
        assertFalse(result);
    }

    @Test
    public void testMultipleCondition_allNull() {
        User user = new User(null, null, null);
        boolean result = SILab2.function(user, null);
        assertTrue(result);
    }

    @Test
    public void testMultipleCondition_userNull() {
        User user = null;
        boolean result = SILab2.function(user, null);
        assertTrue(result);
    }

    @Test
    public void testMultipleCondition_allNotNull() {
        User user = new User("Bojan", "password123", "bojan@example.com");
        boolean result = SILab2.function(user, null);
        assertFalse(result);
    }
}